Introduction

This directory contains the source code for a driver-module
for the Baum Vario 40 and 80 braille displays.
It is written for Emulation 1, which is the native Baum protocol.

Jason Fayre <jfayre@fayre.dhs.org> reported, that the module also works with
the RBT-40 (which is the north american version of the Vario). Thanks for
testing. If the RBT is really just another name for the same product,
it should also run with RBT-80 (if something even exists).


Credits go to Alexander Graffi <a.graffi@baum.at> of Baum Austria who
organized that I could get a Vario 80, and later on a Vario 40
to write the GPL driver for Linux.

Basic things:
You can twiddle some variables in brlconf.h.
e.g. the repeat time in ms, if you feel key repeation
is too slow.
Also, you can enable USE_PING there.
Background of USE_PING is the following:
I implemented the Device ID PING/PONG of Vario to
be able to detect when the device gets turned off, or
disconnected. This works pretty well for Vario 40 and 80,
only problem is that the current Firmware of the Vario series
is programmed in a way so that the sleeping mode of Varios only gets
activated if there is no serial communication. IMHO this
is a bad idea, because they could simply use key-presses for this.
I talked to the firmware developer, and he told me he will eventually
exclude device ID from this, so that Vario can go to sleep,
even when it gets pinged every once in a while.
This is not implemented yet, so I had to exclude the PINGING
by default to avoid certain problems in conjunction with
sleeping mode. E.g., the Vario 80 doesnt even have a on/off
switch, so you would need to plug the cable out to
get it to turn the display off :).

If you use the device in conjunction with a switchbox and more than one computers
I suggest you to turn USE_PING on. Otherwise the driver doesnt
get reinitialized when the device comes back.


Vario 40:
See the help1.txt file for key-bindings.

Vario 80:
The Braille keyboard keys of the Vario 80 are implemented.
You just have to press all 7 keys at once, and
will here a sound played. This places you into typing mode,
where you can type in braille and the chars will get placed into
the terminal. dot 7 is generated when you combine with
the space (chord) key.
There are some basic commands in typing mode for easy correction:
chord 2 = backspace
chord 3 = cursor left
chord 4 = return
chord 5 = tab
chord 6 = cursor right

To leave typing mode, just hit all 7 keys again.

See help0.txt for help about the other keys.


TODO:
Revise the way repeation and top-key combinations are handled.
It looks like it works this way, but the code is a bit ugly.
I also sometimes had some problems with the Vario 40 but
I was unable to track the problem down.

Author:
The driver was written by Mario Lang <mlang@delysid.org>.
I started to work on in late August 2000. When you
read this file, I already had to give the devices back. If I am lucky,
I'll get a Vario 80 sooner or later, but in the meantime, I'll
not be able to update the code (at least, I will not be able to
test any changes).
If you like or dislike anything, e.g. the choice of key-combinations 
and so on, please drop me a note. I am eager to get your feedback.


Bugs:
As above, Vario 40 sometimes behaves strange. I feel like
this is a typing-prblem somewhere with a variable or something.
Perhaps someone other finds it when looking at the code,
This is pretty much the first useful C program I coded,
so there may be things I didn't see.
